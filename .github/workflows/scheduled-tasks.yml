name: Scheduled Maintenance

on:
  schedule:
    - cron: '0 2 * * *'
  workflow_dispatch: {}
  workflow_call:
    secrets: {}

permissions:
  contents: read
  issues: write

jobs:
  maintenance:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install link checker
        run: |
          npm install -g markdown-link-check@3

      - name: Verify Markdown links (non-fatal)
        run: |
          find . -name "*.md" -type f | while read f; do
            echo "Checking $f"
            markdown-link-check -q -c '{"ignorePatterns":[{"pattern":"^mailto:"}]}' "$f" || echo "Link issues found in $f"
          done

      - name: Find stale branches
        id: stale
        uses: actions/github-script@v7
        with:
          script: |
            const { data: branches } = await github.repos.listBranches({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            const now = Date.now();
            const stale = [];
            for (const b of branches) {
              const { data: commit } = await github.repos.getCommit({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: b.commit.sha,
              });
              const ageDays = Math.floor((now - new Date(commit.commit.author.date).getTime()) / (1000*60*60*24));
              if (ageDays > 90 && !b.protected) stale.push({ name: b.name, ageDays });
            }
            core.setOutput('stale', JSON.stringify(stale));

      - name: Create maintenance report
        uses: actions/github-script@v7
        with:
          script: |
            const stale = JSON.parse(process.env.STALE || '[]');
            const lines = [
              `Daily maintenance report for ${new Date().toISOString()}`,
              '',
              'Stale branches (>90 days):',
              ...stale.map(s => `- ${s.name} (${s.ageDays} days)`),
              stale.length === 0 ? '- None' : '',
            ].filter(Boolean);
            try {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `Automated maintenance report - ${new Date().toISOString()}`,
                body: lines.join('\n'),
                labels: ['automation','maintenance']
              });
              console.log('✅ Maintenance report created');
            } catch (error) {
              console.log(`⚠️ Could not create report: ${error.message}`);
            }
        env:
          STALE: ${{ steps.stale.outputs.stale }}

      - name: Cleanup temporary files
        run: |
          echo "✅ Cleanup complete"

